---

- name: "5.4.1 | PATCH | Ensure password creation requirements are configured"
  block:
      - name: "5.4.1 | PATCH | Ensure password creation requirements are configured | Install pam_pwquality module"
        ansible.builtin.package:
            name: libpam-pwquality
            state: present

      - name: "5.4.1 | PATCH | Ensure password creation requirements are configured | Add minlen"
        ansible.builtin.lineinfile:
            path: /etc/security/pwquality.conf
            regexp: '^minlen|^# minlen'
            line: minlen = 14

      - name: "5.4.1 | PATCH | Ensure password creation requirements are configured | Add minclass"
        ansible.builtin.lineinfile:
            path: /etc/security/pwquality.conf
            regexp: ^minclass
            line: "minclass = {{ debian11cis_pwquality_minclass_value }}"
        when: debian11cis_pwquality_minclass

      - name: "5.4.1 | PATCH | Ensure password creation requirements are configured | Add extended keys"
        ansible.builtin.lineinfile:
            path: /etc/security/pwquality.conf
            regexp: ^{{ item.key }}
            line: "{{ item.key }} = {{ item.value }}"
        loop: "{{ debian11cis_pwquality }}"
        when: not debian11cis_pwquality_minclass

      - name: "5.4.1 | AUDIT | Ensure password creation requirements are configured | Confirm pwquality module in common-password"
        ansible.builtin.shell: grep 'password.*requisite.*pam_pwquality.so' /etc/pam.d/common-password
        changed_when: false
        failed_when: false
        check_mode: false
        register: debian11cis_5_4_1_pam_pwquality_state

      - name: "5.4.1 | PATCH | Ensure password creation requirements are configured | Set retry to 3 if pwquality exists"
        community.general.pamd:
            name: common-password
            type: password
            control: requisite
            module_path: pam_pwquality.so
            module_arguments: 'retry=3'
            state: args_present
        when: debian11cis_5_4_1_pam_pwquality_state.stdout | length > 0

      - name: "5.4.1 | PATCH | Ensure password creation requirements are configured | Set retry to 3 if pwquality does not exist"
        community.general.pamd:
            name: common-password
            type: password
            control: required
            module_path: pam_permit.so
            new_type: password
            new_control: requisite
            new_module_path: pam_pwquality.so
            module_arguments: 'retry=3'
            state: after
        when: debian11cis_5_4_1_pam_pwquality_state.stdout | length == 0
  when:
      - debian11cis_rule_5_4_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.4.1
      - pam

- name: "5.4.2 | AUDIT | Ensure lockout for failed password attempts is configured"
  block:
      - name: "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Check pam faillock is set"
        ansible.builtin.shell: grep -E "preauth|authfail|authsucc" /etc/pam.d/common-auth | grep pam_faillock.so
        register: faillock_state
        failed_when: faillock_state.rc not in [0, 1]
        changed_when: false

      ## Issues have been seen with this control that can't always be replicated
      ## Please ensure you understand what this control is doing before overriding the current settings
      - name: "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Set faillock in common-auth"
        ansible.builtin.replace:
            path: /etc/pam.d/common-auth
            before: .*pam_deny.so
            regexp: .*pam_unix.so nullok
            replace: "{{ debian11cis_rule_5_4_2_faillock_config }}"
        when:
            - "'pam_faillock.so' not in faillock_state.stdout"
            - debian11cis_allow_common_auth_rewrite

      - name: "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Set faillock common-account"
        ansible.builtin.lineinfile:
            path: /etc/pam.d/common-account
            regexp: '^account\s+required\s+pam_faillock.so'
            line: 'account required              pam_faillock.so'

      - name: "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Set pam_deny.so and pam_tally.so"
        ansible.builtin.lineinfile:
            path: /etc/security/faillock.conf
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: '^# end of pam-auth-update config'
            create: true
        loop:
            - { regexp: '^deny', line: 'deny = 4' }
            - { regexp: '^fail_interval', line: 'fail_interval = 900' }
            - { regexp: '^unlock_time', line: 'unlock_time = 600' }
  when:
      - debian11cis_rule_5_4_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.4.2
      - pam
      - notimplemented

- name: "5.4.3 | PATCH | Ensure password reuse is limited"
  block:
      - name: "5.4.3 | PATCH | Ensure password reuse is limited | Add pam_unix or edit it accordingly"
        community.general.pamd:
            name: common-password
            type: password
            control: '[success=1 default=ignore]'
            module_path: pam_unix.so
            module_arguments: 'obscure
                yescrypt'
            state: args_present

      - name: "5.4.3 | PATCH | Ensure password reuse is limited| Set remember value after adding pam unix"
        community.general.pamd:
            name: common-password
            type: password
            control: '[success=1 default=ignore]'
            module_path: pam_unix.so
            new_type: password
            new_module_path: pam_pwhistory.so
            new_control: required
            module_arguments: 'use_authtok
                remember={{ debian11cis_pamd_pwhistory_remember }}'
            state: before
  when:
      - debian11cis_rule_5_4_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.4.3
      - pam

- name: "5.4.4 | PATCH | Ensure password hashing algorithm is up to date with the latest standards"
  block:
      - name: "5.4.4 | AUDIT | Ensure password hashing algorithm is up to date with the latest standards | Confirm pam_unix.so"
        ansible.builtin.shell: grep -v ^# /etc/pam.d/common-password | grep -E "(yescrypt|md5|bigcrypt|sha256|sha512|blowfish)"
        changed_when: false
        failed_when: false
        check_mode: false
        register: debian11cis_5_4_4_pam_unix_state

      - name: "5.4.4 | PATCH | Ensure password hashing algorithm is up to date with the latest standards | Set hashing if pam_unix.so exists"
        community.general.pamd:
            name: common-password
            type: password
            control: '[success=1 default=ignore]'
            module_path: pam_unix.so
            module_arguments: "{{ debian11cis_passwd_hash_algo }}"
            state: "{{ debian11cis_passwd_setpam_hash_algo | ternary('args_present', 'args_absent') }}"
        when:
            - debian11cis_5_4_4_pam_unix_state.stdout | length > 0

      - name: "5.4.4 | PATCH | Ensure password hashing algorithm is up to date with the latest standards | Set hashing if pam_unix.so does not exist"
        ansible.builtin.lineinfile:
            path: /etc/login.defs
            regexp: '^ENCRYPT_METHOD'
            line: 'ENCRYPT_METHOD {{ debian11cis_passwd_hash_algo }}'
  when:
      - debian11cis_rule_5_4_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.4.4
      - pam

- name: "5.4.5 | PATCH | Ensure password hashing algorithm is up to date with the latest standards"
  block:
      - name: "5.4.5 | AUDIT | Ensure all current passwords uses the configured hashing algorithm | capture hash"
        ansible.builtin.shell: cat /etc/shadow | awk -F':' '{print $1" "$2}' | grep -Ev '(!|\*)'
        changed_when: false
        failed_when: false
        check_mode: false
        register: debian11cis_5_4_5_passwd_hash_used

      # This is only looking for yescrypt if sha512 need to change the $y$ to $6$
      - name: "5.4.5 | AUDIT | Ensure all current passwords uses the configured hashing algorithm | check has found"
        ansible.builtin.debug:
            msg: "Warning!! Passwords found using not using {{ debian11cis_passwd_hash_algo }} algorithm - This required manual intervention"
        when: "' $y$' not in debian11cis_5_4_5_passwd_hash_used.stdout"

      - name: "5.4.5 | WARN | Ensure all current passwords uses the configured hashing algorithm | warn_count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
        when: "' $y$' not in debian11cis_5_4_5_passwd_hash_used.stdout"
  vars:
      warn_control_id: '5.4.5'
  when:
      - debian11cis_rule_5_4_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.4.5
      - pam
